// <auto-generated />
using System;
using ConsoleCMD.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsoleCMD.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230120105426_Mig")]
    partial class Mig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("ConsoleCMD.Database.Models.Directory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IconId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IconId");

                    b.HasIndex("ParentId");

                    b.ToTable("Directory", (string)null);
                });

            modelBuilder.Entity("ConsoleCMD.Database.Models.Extension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IconId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IconId");

                    b.ToTable("Extension", (string)null);
                });

            modelBuilder.Entity("ConsoleCMD.Database.Models.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExtensionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("ParentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ExtensionId");

                    b.HasIndex("ParentId");

                    b.ToTable("File", (string)null);
                });

            modelBuilder.Entity("ConsoleCMD.Database.Models.Icon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.ToTable("Icon", (string)null);
                });

            modelBuilder.Entity("ConsoleCMD.Database.Models.Directory", b =>
                {
                    b.HasOne("ConsoleCMD.Database.Models.Icon", "Icon")
                        .WithMany("Directories")
                        .HasForeignKey("IconId")
                        .HasConstraintName("FK_Directory_Icon");

                    b.HasOne("ConsoleCMD.Database.Models.Directory", "Parent")
                        .WithMany("SubDirectories")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Directory_Directory");

                    b.Navigation("Icon");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("ConsoleCMD.Database.Models.Extension", b =>
                {
                    b.HasOne("ConsoleCMD.Database.Models.Icon", "Icon")
                        .WithMany("Extensions")
                        .HasForeignKey("IconId")
                        .HasConstraintName("FK_Extension_Icon");

                    b.Navigation("Icon");
                });

            modelBuilder.Entity("ConsoleCMD.Database.Models.File", b =>
                {
                    b.HasOne("ConsoleCMD.Database.Models.Extension", "Extension")
                        .WithMany("Files")
                        .HasForeignKey("ExtensionId")
                        .IsRequired()
                        .HasConstraintName("FK_File_Extension");

                    b.HasOne("ConsoleCMD.Database.Models.Directory", "Parent")
                        .WithMany("Files")
                        .HasForeignKey("ParentId")
                        .IsRequired()
                        .HasConstraintName("FK_File_Directory");

                    b.Navigation("Extension");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("ConsoleCMD.Database.Models.Directory", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("SubDirectories");
                });

            modelBuilder.Entity("ConsoleCMD.Database.Models.Extension", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("ConsoleCMD.Database.Models.Icon", b =>
                {
                    b.Navigation("Directories");

                    b.Navigation("Extensions");
                });
#pragma warning restore 612, 618
        }
    }
}
